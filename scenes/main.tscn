[gd_scene load_steps=8 format=2]

[ext_resource path="res://scenes/pong/pong.tscn" type="PackedScene" id=1]
[ext_resource path="res://gdscript/ui/trait_buttons.gd" type="Script" id=2]
[ext_resource path="res://gdscript/ui/systems_debugger.gd" type="Script" id=3]
[ext_resource path="res://gdscript/ui/remote_layout.gd" type="Script" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Viewport
"

[sub_resource type="GDScript" id=2]
script/source = "extends Tween
tool

export(NodePath) var control_path := NodePath() setget set_control_path

func set_control_path(new_control_path: NodePath) -> void:
	if control_path != new_control_path:
		control_path = new_control_path

func toggle(state: bool) -> void:
	if state:
		forward()
	else:
		backward()

func forward() -> void:
	var node = get_node(control_path)
	interpolate_property(node, \"rect_min_size\", null, Vector2(600, node.rect_min_size.y), 0.5, Tween.TRANS_QUINT, Tween.EASE_OUT)
	start()

func backward() -> void:
	var node = get_node(control_path)
	interpolate_property(node, \"rect_min_size\", null, Vector2(0, node.rect_min_size.y), 0.5, Tween.TRANS_QUINT, Tween.EASE_OUT)
	start()
"

[sub_resource type="ViewportTexture" id=3]
flags = 4
viewport_path = NodePath("Viewport")

[node name="Main" type="Node"]

[node name="TODO" type="Node" parent="."]
__meta__ = {
"_editor_description_": "Features
=======
- Query parameters
	- Optional fields, no-field
		- Implement Some / None types with Maybe interface / superclass
		
- Improve debugger
	- Hook into Traitor rebuild via signal
	- Custom control support
		- Replace debug_string with debug_data, add optional method for specifying control
			- A general encoding would be good here - some sort of funcref indirection
				- A Closure type wrapping a funcref + argument array may be helpful
		- Pool controls by script type, reuse across rebuilds
		- Data editing
			- How to handle this? Need a generalized solution
				- Trait types so far:
					- Component (predicated on a child node of a specific type)
						- Tag (component with no underlying data)
					- Method (predicated on the presence of a function)
						- Property (predicated on the presence of getter / setter functions)
				- Component and Property should be generalizable
					- Edit property via a control of matching type
					- Edit component as set of properties
	- Component / Entity destruction support
	- Component / Entity creation support
		- How to generalize this?
			- Need to be able to spawn nodes by class for inherent traits
			- Need to be able to spawn scenes for assemblage
			- Component traits could have an apply() method to convert an object into a valid implementor
	
	- Pause and resume
	- Queries tab listing all queries currently in use
		- Scan through all systems for unique queries, display
		- May be best to piggyback on a prospective query caching acceleration structure
	- Entity tab for listing unique entities and their traits
		- Effectively an 'all traits OR' query
		- Preferable to piggyback on some accelleration structure for performance's sake
	- Use extra space below viewport for more controls
		- Trait stats? Group names, sizes, etc

- Investigate query caching
	- Convert Traitor.query() into an instance method
		- Use as a registration method to create accelleration structures
		- Return a handle that can be used to invoke the query
	- Have Traitor maintain a set of query > result arrays that get populated when group updates run

Improvements
============
- Better system / query structure
	- Current setup doesn't account for queries that occur as a result of other queries
		- ex. Interpolator system uses Position2 to move Interpolant nodes, but doesn't query Position2 or Interpolant
			- Would be nice if these could be displayed for debug
	- Read / Write isn't distinguished or displayed

Thinking
=======
- How to better embody the database pattern?
- Would a 'trait object' wrapper type approach be more appropriate for traits?
	- Basic WeakRef wrapper with methods for access to the underlying type

Demos
======
- ECS Breakout
- ECS Super Mario Bros"
}

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 1024, 600 )
own_world = true
handle_input_locally = false
disable_3d = true
usage = 1
render_target_v_flip = true
render_target_update_mode = 3
gui_disable_input = true
script = SubResource( 1 )

[node name="Pong" parent="Viewport" instance=ExtResource( 1 )]

[node name="HBoxContainer" type="HBoxContainer" parent="." groups=["position2"]]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 600.0
custom_constants/separation = 0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MainSlot" type="Control" parent="HBoxContainer" groups=["position2"]]
margin_right = 1024.0
margin_bottom = 600.0
size_flags_horizontal = 3

[node name="RightSlot" type="Control" parent="HBoxContainer" groups=["position2"]]
margin_left = 1024.0
margin_right = 1624.0
margin_bottom = 600.0
rect_min_size = Vector2( 600, 0 )

[node name="RightPadding" type="Control" parent="HBoxContainer" groups=["position2"]]
margin_left = 1624.0
margin_right = 1624.0
margin_bottom = 600.0

[node name="Tween" type="Tween" parent="HBoxContainer/RightPadding"]
script = SubResource( 2 )
control_path = NodePath("..")

[node name="MainRemoteLayout" type="Control" parent="." groups=["position2"]]
margin_right = 1024.0
margin_bottom = 600.0
script = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}
target = NodePath("../HBoxContainer/MainSlot")

[node name="ViewportTexture" type="TextureRect" parent="MainRemoteLayout" groups=["position2"]]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 0
size_flags_horizontal = 3
size_flags_vertical = 3
texture = SubResource( 3 )
expand = true
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="DebuggerButton" type="Button" parent="MainRemoteLayout/ViewportTexture" groups=["position2", "text"]]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -81.0001
margin_top = -28.0
margin_right = -8.00006
margin_bottom = -8.0
toggle_mode = true
text = "Debugger"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RightRemoteLayout" type="Control" parent="." groups=["position2"]]
margin_left = 1024.0
margin_right = 1624.0
margin_bottom = 600.0
rect_min_size = Vector2( 600, 0 )
script = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}
target = NodePath("../HBoxContainer/RightSlot")

[node name="Debugger" type="TabContainer" parent="RightRemoteLayout" groups=["position2"]]
anchor_right = 1.0
anchor_bottom = 1.0
custom_constants/top_margin = 0
custom_constants/side_margin = 0
tab_align = 0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Systems" type="Tree" parent="RightRemoteLayout/Debugger" groups=["position2"]]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0
columns = 4
hide_root = true
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Custom Query" type="Control" parent="RightRemoteLayout/Debugger" groups=["position2"]]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0

[node name="VBoxContainer" type="VBoxContainer" parent="RightRemoteLayout/Debugger/Custom Query" groups=["position2"]]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TraitButtons" type="GridContainer" parent="RightRemoteLayout/Debugger/Custom Query/VBoxContainer" groups=["position2"]]
margin_right = 592.0
margin_bottom = 236.0
columns = 3
script = ExtResource( 2 )

[node name="TraitorDebugger" type="Tree" parent="RightRemoteLayout/Debugger/Custom Query/VBoxContainer" groups=["position2"]]
margin_top = 240.0
margin_right = 592.0
margin_bottom = 564.0
size_flags_vertical = 3
hide_root = true
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}
mode = 1

[connection signal="gui_input" from="MainRemoteLayout/ViewportTexture" to="Viewport" method="unhandled_input"]
[connection signal="toggled" from="MainRemoteLayout/ViewportTexture/DebuggerButton" to="HBoxContainer/RightPadding/Tween" method="toggle"]
[connection signal="trait_toggled" from="RightRemoteLayout/Debugger/Custom Query/VBoxContainer/TraitButtons" to="RightRemoteLayout/Debugger/Custom Query/VBoxContainer/TraitorDebugger" method="set_query_trait"]
